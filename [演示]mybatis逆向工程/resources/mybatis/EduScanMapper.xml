<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.educoder.core.persistence.mapper.EduScanMapper" >
  <resultMap id="BaseResultMap" type="net.educoder.core.persistence.beans.EduScan" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="to_user_name" property="toUserName" jdbcType="VARCHAR" />
    <result column="from_user_name" property="fromUserName" jdbcType="VARCHAR" />
    <result column="msg_type" property="msgType" jdbcType="VARCHAR" />
    <result column="event" property="event" jdbcType="VARCHAR" />
    <result column="event_key" property="eventKey" jdbcType="VARCHAR" />
    <result column="ticket" property="ticket" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from edu_scan
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="net.educoder.core.persistence.beans.EduScan" >
    insert into edu_scan (id, to_user_name, from_user_name, 
      msg_type, event, event_key, 
      ticket, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{toUserName,jdbcType=VARCHAR}, #{fromUserName,jdbcType=VARCHAR}, 
      #{msgType,jdbcType=VARCHAR}, #{event,jdbcType=VARCHAR}, #{eventKey,jdbcType=VARCHAR}, 
      #{ticket,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="net.educoder.core.persistence.beans.EduScan" >
    update edu_scan
    set to_user_name = #{toUserName,jdbcType=VARCHAR},
      from_user_name = #{fromUserName,jdbcType=VARCHAR},
      msg_type = #{msgType,jdbcType=VARCHAR},
      event = #{event,jdbcType=VARCHAR},
      event_key = #{eventKey,jdbcType=VARCHAR},
      ticket = #{ticket,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, to_user_name, from_user_name, msg_type, event, event_key, ticket, create_time, 
    update_time
    from edu_scan
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, to_user_name, from_user_name, msg_type, event, event_key, ticket, create_time, 
    update_time
    from edu_scan
  </select>
</mapper>