<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.educoder.core.persistence.mapper.EduChapterMapper" >
  <resultMap id="BaseResultMap" type="net.educoder.core.persistence.beans.EduChapter" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="position" property="position" jdbcType="INTEGER" />
    <result column="course_id" property="courseId" jdbcType="BIGINT" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="reserved_price" property="reservedPrice" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="is_delete" property="isDelete" jdbcType="BIT" />
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from edu_chapter
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="net.educoder.core.persistence.beans.EduChapter" >
    insert into edu_chapter (id, name, position, 
      course_id, price, reserved_price, 
      create_time, update_time, user_id, 
      is_delete, description)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{position,jdbcType=INTEGER}, 
      #{courseId,jdbcType=BIGINT}, #{price,jdbcType=DECIMAL}, #{reservedPrice,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=BIGINT}, 
      #{isDelete,jdbcType=BIT}, #{description,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="net.educoder.core.persistence.beans.EduChapter" >
    update edu_chapter
    set name = #{name,jdbcType=VARCHAR},
      position = #{position,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=BIGINT},
      price = #{price,jdbcType=DECIMAL},
      reserved_price = #{reservedPrice,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=BIGINT},
      is_delete = #{isDelete,jdbcType=BIT},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, name, position, course_id, price, reserved_price, create_time, update_time, 
    user_id, is_delete, description
    from edu_chapter
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, name, position, course_id, price, reserved_price, create_time, update_time, 
    user_id, is_delete, description
    from edu_chapter
  </select>
</mapper>